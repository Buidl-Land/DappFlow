/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {

  545: {
    DiamondCutFacet: {
      address: "0x234DC1d8548655980055dCa81Bc3c0b4AadD3A68",
      abi: [
        {
          type: "function",
          name: "diamondCut",
          inputs: [
            {
              name: "_diamondCut",
              type: "tuple[]",
              internalType: "struct IDiamondCut.FacetCut[]",
              components: [
                {
                  name: "facetAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "action",
                  type: "uint8",
                  internalType: "enum IDiamondCut.FacetCutAction",
                },
                {
                  name: "functionSelectors",
                  type: "bytes4[]",
                  internalType: "bytes4[]",
                },
              ],
            },
            {
              name: "_init",
              type: "address",
              internalType: "address",
            },
            {
              name: "_calldata",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "DiamondCut",
          inputs: [
            {
              name: "_diamondCut",
              type: "tuple[]",
              indexed: false,
              internalType: "struct IDiamondCut.FacetCut[]",
              components: [
                {
                  name: "facetAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "action",
                  type: "uint8",
                  internalType: "enum IDiamondCut.FacetCutAction",
                },
                {
                  name: "functionSelectors",
                  type: "bytes4[]",
                  internalType: "bytes4[]",
                },
              ],
            },
            {
              name: "_init",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "_calldata",
              type: "bytes",
              indexed: false,
              internalType: "bytes",
            },
          ],
          anonymous: false,
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1743237586.json",
      deploymentScript: "Deploy.s.sol",
    },
    Diamond: {
      address: "0x062618eCed9140c206f4240827440B53Ad1Bb230",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_contractOwner",
              type: "address",
              internalType: "address",
            },
            {
              name: "_diamondCutFacet",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "payable",
        },
        {
          type: "fallback",
          stateMutability: "payable",
        },
        {
          type: "receive",
          stateMutability: "payable",
        },
        {
          type: "event",
          name: "DiamondCut",
          inputs: [
            {
              name: "_diamondCut",
              type: "tuple[]",
              indexed: false,
              internalType: "struct IDiamondCut.FacetCut[]",
              components: [
                {
                  name: "facetAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "action",
                  type: "uint8",
                  internalType: "enum IDiamondCut.FacetCutAction",
                },
                {
                  name: "functionSelectors",
                  type: "bytes4[]",
                  internalType: "bytes4[]",
                },
              ],
            },
            {
              name: "_init",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "_calldata",
              type: "bytes",
              indexed: false,
              internalType: "bytes",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "OwnershipTransferred",
          inputs: [
            {
              name: "previousOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1743237586.json",
      deploymentScript: "Deploy.s.sol",
    },
    AccessControlFacet: {
      address: "0x230aD1a12896b29d009f8E5D452492b916635BA4",
      abi: [
        {
          type: "function",
          name: "ADMIN_ROLE",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "AI_AGENT_ROLE",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "FUNDING_MANAGER_ROLE",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "PROJECT_CREATOR_ROLE",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "TASK_CREATOR_ROLE",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "addAdmin",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "grantRole",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "hasRole",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "initializeAccessControl",
          inputs: [
            {
              name: "initialAdmin",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "isAdmin",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "removeAdmin",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "revokeRole",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "AdminAdded",
          inputs: [
            {
              name: "admin",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "sender",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "AdminRemoved",
          inputs: [
            {
              name: "admin",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "sender",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "RoleGranted",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              indexed: true,
              internalType: "bytes32",
            },
            {
              name: "account",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "sender",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "RoleRevoked",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              indexed: true,
              internalType: "bytes32",
            },
            {
              name: "account",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "sender",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1743237586.json",
      deploymentScript: "Deploy.s.sol",
    },
    ProjectFacet: {
      address: "0x4842fF88AD518F272F095b947B74a55387D04890",
      abi: [
        {
          type: "function",
          name: "createProject",
          inputs: [
            {
              name: "title",
              type: "string",
              internalType: "string",
            },
            {
              name: "description",
              type: "string",
              internalType: "string",
            },
            {
              name: "tags",
              type: "string[]",
              internalType: "string[]",
            },
            {
              name: "metadata",
              type: "tuple",
              internalType: "struct ProjectFacet.ProjectMetadata",
              components: [
                {
                  name: "aiEvaluation",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "marketScore",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "techFeasibility",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "minValuation",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "maxValuation",
                  type: "uint256",
                  internalType: "uint256",
                },
              ],
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getProject",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "creator",
              type: "address",
              internalType: "address",
            },
            {
              name: "title",
              type: "string",
              internalType: "string",
            },
            {
              name: "description",
              type: "string",
              internalType: "string",
            },
            {
              name: "tags",
              type: "string[]",
              internalType: "string[]",
            },
            {
              name: "metadata",
              type: "tuple",
              internalType: "struct ProjectFacet.ProjectMetadata",
              components: [
                {
                  name: "aiEvaluation",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "marketScore",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "techFeasibility",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "minValuation",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "maxValuation",
                  type: "uint256",
                  internalType: "uint256",
                },
              ],
            },
            {
              name: "status",
              type: "uint8",
              internalType: "enum ProjectFacet.ProjectStatus",
            },
            {
              name: "createdAt",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "updatedAt",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getProjectCount",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getUserProjects",
          inputs: [
            {
              name: "user",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isProjectOwner",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "updateProject",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "title",
              type: "string",
              internalType: "string",
            },
            {
              name: "description",
              type: "string",
              internalType: "string",
            },
            {
              name: "tags",
              type: "string[]",
              internalType: "string[]",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "updateProjectMetadata",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "metadata",
              type: "tuple",
              internalType: "struct ProjectFacet.ProjectMetadata",
              components: [
                {
                  name: "aiEvaluation",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "marketScore",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "techFeasibility",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "minValuation",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "maxValuation",
                  type: "uint256",
                  internalType: "uint256",
                },
              ],
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "updateProjectStatus",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "newStatus",
              type: "uint8",
              internalType: "enum ProjectFacet.ProjectStatus",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "ProjectCreated",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "creator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "title",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "timestamp",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "ProjectStatusChanged",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "oldStatus",
              type: "uint8",
              indexed: false,
              internalType: "enum ProjectFacet.ProjectStatus",
            },
            {
              name: "newStatus",
              type: "uint8",
              indexed: false,
              internalType: "enum ProjectFacet.ProjectStatus",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "ProjectUpdated",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "title",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "status",
              type: "uint8",
              indexed: false,
              internalType: "enum ProjectFacet.ProjectStatus",
            },
            {
              name: "timestamp",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1743237586.json",
      deploymentScript: "Deploy.s.sol",
    },
    CrowdfundingFacet: {
      address: "0x187E34a55DC3aB19256B421Cd3d435a70B3F11f9",
      abi: [
        {
          type: "function",
          name: "claimRefund",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "contribute",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "amount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getContribution",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "contributor",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getFundingInfo",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "fundingGoal",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "raisedAmount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "startTime",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "endTime",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "hasMetFundingGoal",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "paymentToken",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getRaisedAmount",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getUserContributions",
          inputs: [
            {
              name: "user",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "initializeFunding",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "fundingGoal",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "duration",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "paymentToken",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "isFunded",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "ContributionMade",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "contributor",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "FundingFailed",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "totalRaised",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "FundingSuccessful",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "totalRaised",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "RefundClaimed",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "contributor",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1743237586.json",
      deploymentScript: "Deploy.s.sol",
    },
    ProjectTokenFacet: {
      address: "0x8244f8E2ECE7D0761D9F778F08FA3602e7574608",
      abi: [
        {
          type: "function",
          name: "claimTokens",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "createProjectToken",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "name",
              type: "string",
              internalType: "string",
            },
            {
              name: "symbol",
              type: "string",
              internalType: "string",
            },
            {
              name: "totalSupply",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getClaimedAmount",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getProjectToken",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "tokenAddress",
              type: "address",
              internalType: "address",
            },
            {
              name: "totalSupply",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "crowdfundingPool",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "teamPool",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "ecosystemPool",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "vestingStart",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "vestingDuration",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTokenContribution",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "contributor",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTokenRaisedAmount",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "ProjectTokenCreated",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "tokenAddress",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "name",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "symbol",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TokensClaimed",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "beneficiary",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1743237586.json",
      deploymentScript: "Deploy.s.sol",
    },
    TaskMarketFacet: {
      address: "0x1e9227C2b2fbFd1b8DDb342eCAF8EEEA23e1D50d",
      abi: [
        {
          type: "function",
          name: "applyForTask",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "taskId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "assignTask",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "taskId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "assignee",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "completeTask",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "taskId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "createTask",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "title",
              type: "string",
              internalType: "string",
            },
            {
              name: "description",
              type: "string",
              internalType: "string",
            },
            {
              name: "reward",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "deadline",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "requiredSkills",
              type: "string[]",
              internalType: "string[]",
            },
            {
              name: "estimatedHours",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getProjectTaskCount",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTask",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "taskId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "title",
              type: "string",
              internalType: "string",
            },
            {
              name: "description",
              type: "string",
              internalType: "string",
            },
            {
              name: "reward",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "deadline",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "status",
              type: "uint8",
              internalType: "enum TaskMarketFacet.TaskStatus",
            },
            {
              name: "requiredSkills",
              type: "string[]",
              internalType: "string[]",
            },
            {
              name: "estimatedHours",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "assignee",
              type: "address",
              internalType: "address",
            },
            {
              name: "createdAt",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "completedAt",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getUserTasks",
          inputs: [
            {
              name: "user",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "hasApplied",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "taskId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "user",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "initialize",
          inputs: [
            {
              name: "_paymentToken",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "startTask",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "taskId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "verifyTask",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "taskId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "TaskApplicationSubmitted",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "taskId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "applicant",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TaskAssigned",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "taskId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "assignee",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TaskCompleted",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "taskId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "assignee",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TaskCreated",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "taskId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "title",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "reward",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "requiredSkills",
              type: "string[]",
              indexed: false,
              internalType: "string[]",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TaskUpdated",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "taskId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "status",
              type: "uint8",
              indexed: false,
              internalType: "enum TaskMarketFacet.TaskStatus",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TaskVerified",
          inputs: [
            {
              name: "projectId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "taskId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "reward",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1743237586.json",
      deploymentScript: "Deploy.s.sol",
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
